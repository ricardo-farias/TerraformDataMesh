
# Airflow
apiVersion: apps/v1
kind: Deployment
metadata:
  name: airflow
spec:
  selector:
    matchLabels:
      app: airflow
  replicas: 1
  template:
    metadata:
      labels:
        app: airflow
    spec:
      containers:
      - name: webserver
        image: "{{ .Values.dags_image.repository }}:{{ .Values.dags_image.tag }}"
        imagePullPolicy: Always
        ports:
        - containerPort: 8080          
        command:
          - "/entrypoint.sh"
        args:
          - "webserver"
        env:
          - name: LOAD_EX
            value: "n"
          - name: EXECUTOR
            value: "Local"
          - name: POSTGRES_PASSWORD
            valueFrom:
              secretKeyRef:
                key: POSTGRES_PASSWORD
                name: airflow-secrets
        envFrom:
          - configMapRef:
              name: airflow-config
        livenessProbe:
          httpGet:
            path: /
            port: 8080
          initialDelaySeconds: 240
          periodSeconds: 60
      - name: scheduler
        image: "{{ .Values.dags_image.repository }}:{{ .Values.dags_image.tag }}"
        imagePullPolicy: Always
        command:
          - "/entrypoint.sh"
        args:
          - "scheduler"
        env:
          - name: LOAD_EX
            value: "n"
          - name: EXECUTOR
            value: "Local"
          - name: POSTGRES_PASSWORD
            valueFrom:
              secretKeyRef:
                key: POSTGRES_PASSWORD
                name: airflow-secrets
        envFrom:
          - configMapRef:
              name: airflow-config
---
# LoadBalancer
apiVersion: v1
kind: Service
metadata:
  name: airflow
spec:
  type: LoadBalancer
  selector:
    app: airflow
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8080
---